class Solution {
public:
    int solve(int index,int buy,int cap,vector<int>&arr,vector<vector<vector<int>>>& dp){
        if(index==arr.size()|| cap==0 ){
            return 0;
        }
        if(dp[index][buy][cap]!=-1){
            return dp[index][buy][cap];
        }
        int profit=0;
        if(buy){
            profit=max(0+solve(index+1,1,cap,arr,dp),-arr[index]+solve(index+1,0,cap,arr,dp));
        }
        else{
            profit=max(0+solve(index+1,0,cap,arr,dp),arr[index]+solve(index+1,1,cap-1,arr,dp));
        }
        dp[index][buy][cap]=profit;
        return dp[index][buy][cap];
    }
    int maxProfit(int k, vector<int>& prices) {
        int n=prices.size();
        int buy=1;
        vector<vector<vector<int>>>dp(n+1,vector<vector<int>>(2,vector<int>(k+1,-1)));
        return solve(0,buy,k,prices,dp);
    }
};
