class Solution {
public:
    int function(vector<int> &nums, int k){
        if(k < 0){
            return 0;
        }
        map<int, int> m;
        int p1 = 0;
        int count = 0;
        int n = nums.size();
        
        for(int i = 0; i < n; i++){
            m[nums[i]]++;
            
            while(m.size() > k){
                m[nums[p1]]--;
                if(m[nums[p1]] == 0){
                    m.erase(nums[p1]);
                }
                p1++;
            }
            
            count += (i - p1 + 1);  // count all valid subarrays ending at i
        }
        return count;
    }
    
    int subarraysWithKDistinct(vector<int>& nums, int k) {
        int ans1 = function(nums, k);
        int ans2 = function(nums, k-1);
        return ans1 - ans2;
    }
};
